name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  build_linux_wheels:
    name: Build Linux wheels
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: false
    
    - name: Build manylinux wheels
      uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
      with:
        python-versions: 'cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312'
        build-requirements: 'numpy'
        system-packages: 'golang'
        pre-build-command: 'go version'

    - name: Store wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux
        path: dist/*-manylinux*.whl

  build_macos_wheels:
    name: Build macOS wheels
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: false
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install build setuptools numpy
    
    - name: Build wheel
      run: python -m build --wheel --no-isolation
    
    - name: Store wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos
        path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install build setuptools numpy
    
    - name: Build sdist
      run: python -m build --sdist --no-isolation
    
    - name: Store sdist
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  upload:
    needs: [build_linux_wheels, build_macos_wheels, build_sdist]
    runs-on: ubuntu-22.04
    environment:
      name: pypi
      url: https://pypi.org/p/go-polars
    permissions:
      id-token: write

    steps:
    - name: Download Linux wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels-linux
        path: dist/
    
    - name: Download macOS wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels-macos
        path: dist/
    
    - name: Download sdist
      uses: actions/download-artifact@v4
      with:
        name: sdist
        path: dist/

    - name: Remove unsupported linux_x86_64 wheels
      run: |
        # Delete wheels that do not have a manylinux or musllinux tag
        echo "Cleaning dist directory before upload..."
        find dist -name '*linux_x86_64.whl' ! -name '*manylinux*' ! -name '*musllinux*' -print -delete

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/ 